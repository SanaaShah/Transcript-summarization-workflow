# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Serialization

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Word(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Word()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWord(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Word
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Word
    def Start(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Word
    def Duration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Word
    def Word(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Word
    def Confidence(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # Word
    def TimingEstimated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Word
    def IsEOS(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Word
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Word
    def Tags(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(8)
def WordStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddStart(builder, start): builder.PrependInt64Slot(0, start, 0)
def WordAddStart(builder, start):
    """This method is deprecated. Please switch to AddStart."""
    return AddStart(builder, start)
def AddDuration(builder, duration): builder.PrependInt64Slot(1, duration, 0)
def WordAddDuration(builder, duration):
    """This method is deprecated. Please switch to AddDuration."""
    return AddDuration(builder, duration)
def AddWord(builder, word): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(word), 0)
def WordAddWord(builder, word):
    """This method is deprecated. Please switch to AddWord."""
    return AddWord(builder, word)
def AddConfidence(builder, confidence): builder.PrependFloat32Slot(3, confidence, 0.0)
def WordAddConfidence(builder, confidence):
    """This method is deprecated. Please switch to AddConfidence."""
    return AddConfidence(builder, confidence)
def AddTimingEstimated(builder, timingEstimated): builder.PrependBoolSlot(4, timingEstimated, 0)
def WordAddTimingEstimated(builder, timingEstimated):
    """This method is deprecated. Please switch to AddTimingEstimated."""
    return AddTimingEstimated(builder, timingEstimated)
def AddIsEOS(builder, isEOS): builder.PrependBoolSlot(5, isEOS, 0)
def WordAddIsEOS(builder, isEOS):
    """This method is deprecated. Please switch to AddIsEOS."""
    return AddIsEOS(builder, isEOS)
def AddType(builder, type): builder.PrependInt32Slot(6, type, 0)
def WordAddType(builder, type):
    """This method is deprecated. Please switch to AddType."""
    return AddType(builder, type)
def AddTags(builder, tags): builder.PrependUint32Slot(7, tags, 0)
def WordAddTags(builder, tags):
    """This method is deprecated. Please switch to AddTags."""
    return AddTags(builder, tags)
def End(builder): return builder.EndObject()
def WordEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)